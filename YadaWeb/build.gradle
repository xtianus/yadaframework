group = 'net.yadaframework'
version = '0.3.0'

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		// Needed for test schema creation
		classpath 'net.yadaframework:YadaTools:0.6.7'
		classpath 'kr.motd.gradle:sphinx-gradle-plugin:2.2.0'
	}                    
}

apply plugin: 'java-library'
apply plugin: 'eclipse-wtp'
apply plugin: 'kr.motd.sphinx'

eclipse {
	jdt {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
		// https://stackoverflow.com/a/35302104/587641
		file {
      		File dir = file('.settings')
      		dir.mkdirs()
      		File f = file('.settings/org.eclipse.core.resources.prefs')
      		if (!f.exists()) {
      			f.write('eclipse.preferences.version=1\n')
      			f.append('encoding/<project>=utf-8')
      		}
    	}
	}
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    jcenter()
	mavenLocal()
}

dependencies {
	api 'org.apache.commons:commons-configuration2:2.2'
	
    implementation 'org.springframework:spring-webmvc:4.3.20.RELEASE',
		'org.springframework:spring-context-support:4.3.20.RELEASE',
		'org.springframework.data:spring-data-jpa:1.11.11.RELEASE',
		'org.springframework.social:spring-social-facebook:2.0.3.RELEASE',
		'org.hibernate:hibernate-entitymanager:5.3.7.Final',
		'org.hibernate:hibernate-validator:5.4.2.Final',
		'org.thymeleaf:thymeleaf-spring4:3.0.9.RELEASE',
		'mysql:mysql-connector-java:5.1.46',
		'commons-collections:commons-collections:3.2.2',
		'org.apache.tomcat:tomcat-servlet-api:8.0.48',
		'commons-fileupload:commons-fileupload:1.3.3',
		'org.apache.commons:commons-exec:1.3',
		'com.sun.mail:javax.mail:1.+',
		'com.google.guava:guava:26.0-jre',
		'org.jsoup:jsoup:1.9.1',
		'com.fasterxml.jackson.core:jackson-annotations:2.9.+',
		'com.fasterxml.jackson.core:jackson-core:2.9.+',
		'com.fasterxml.jackson.core:jackson-databind:2.9.7',
		'org.seleniumhq.selenium:selenium-support:3.8.1',
		'org.seleniumhq.selenium:selenium-firefox-driver:3.8.1',
		'org.seleniumhq.selenium:selenium-chrome-driver:3.8.1',
		// 'org.littleshoot:littleproxy:1.1.2',
		'org.quartz-scheduler:quartz:2.2.3', // TODO remove
		'org.flywaydb:flyway-core:5.0.5',
		'commons-beanutils:commons-beanutils:1.9.3'
	
	// Needed to run in Tomcat
	// runtime 'commons-jxpath:commons-jxpath:1.3'

	testImplementation 'junit:junit:4.12',
		'org.springframework:spring-test:4.3.13.RELEASE'
	
	testRuntime 'commons-beanutils:commons-beanutils:1.9.3',
		'commons-jxpath:commons-jxpath:1.3'
		
}

task listJars {
	doLast {
		configurations.compile.each { File file -> println file.name }
	}
}

jar {
    manifest {
        attributes("Implementation-Title": "YadaWeb",
                   "Implementation-Version": version)
    }
}

// Set the yada version in the properties file
processResources {
	doLast {
		ant.replace(file: "${sourceSets.main.output.resourcesDir}/net.yadaframework.yadaweb.properties", token: '@YADA_VERSION@', value: version)
	}
}


apply plugin: 'maven'

// http://stackoverflow.com/a/27853822/587641
// TODO: Il javadoc genera errori che devono essere sistemati prima di poterlo usare
/*
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}   

artifacts {
    archives javadocJar
}
*/

// Per usare meglio maven vedi qui: http://stackoverflow.com/questions/24751996/gradle-configuration-to-download-custom-plugin-dependencies

uploadArchives {
	dependsOn build
	repositories {
		mavenLocal()
	}
}

configurations {
	hibtools {
		extendsFrom configurations.implementation
	}
}

dependencies {
	hibtools files("$buildDir/classes/java/main")
	hibtools files("$buildDir/classes/java/test") // Needed for yadaPersistenceUnit
	hibtools 'org.hibernate:hibernate-tools:5.2.10.Final'
}

task testDbSchema(dependsOn: [testClasses], type: net.yadaframework.tools.YadaCreateDbSchemaTask) {
	inputs.files configurations.hibtools
	outputfilename = "V1__yadatest.sql"
	doFirst {
		new File("$buildDir/classes/java/test/META-INF").mkdirs()
		copy {
			from "$buildDir/resources/test/META-INF/persistence.test.xml"
			into "$buildDir/classes/java/test/META-INF"
			rename 'persistence.test.xml', 'persistence.xml'
		} 
	}
	doLast { 
		delete "$buildDir/classes/java/test/META-INF/persistence.xml"
	}
}


