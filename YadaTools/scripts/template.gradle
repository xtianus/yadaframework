buildscript {
    repositories {
        mavenCentral()
        // mavenLocal()
    }
    dependencies {
        classpath 'net.yadaframework:yadatools:+'
    }
}

plugins {
	id 'application' // for the "run" task
	id 'org.hidetake.ssh' version '2.11.2' // https://gradle-ssh-plugin.github.io
	id 'com.meiuwa.gradle.sass' version "1.0.0"	// Only when using SASS !!! v2.0.0 may not work
	id("com.github.node-gradle.node") version "3.5.1"
	id 'maven-publish'
	id 'signing'
}

group = 'com.EXAMPLE.abc' // CHANGE THIS !!!
version = '0.1.0' // CHANGE THIS !!!
ext.acronym = 'abc' // CHANGE THIS !!!

apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'net.yadaframework.tools'

if (!project.hasProperty('env')) {
	ext.env="envUnset"
}

def acroenv = "${acronym}${env}"

def YadaWebLib = "$projectDir/../../yadaframework/YadaWeb";
def YadaWebCmsLib = "$projectDir/../../yadaframework/YadaWebCMS";

sassCompile {
    source = project.files(fileTree("src/main/webapp/res/css"), fileTree("$YadaWebLib/src/main/resources/net/yadaframework/views/yada/css"), fileTree("$YadaWebCmsLib/src/main/resources/net/yadaframework/views/yada/css")) 
    include("**/*.sass", "**/*.scss", "**/*.css")
    exclude("**/*.min.*", "**/_*.sass", "**/_*.scss")
    output = file("src/main/webapp/res/css")
}

eclipse {
    jdt {
        // https://stackoverflow.com/a/35302104/587641
        file {
                File dir = file('.settings')
                dir.mkdirs()
                File f = file('.settings/org.eclipse.core.resources.prefs')
            if (!f.exists()) {
                    f.write('eclipse.preferences.version=1\n')
                    f.append('encoding/<project>=utf-8')
                }
            }
    }
    wtp {
        component {
        	contextPath = '/'
        }
        // This section edits the file "/.settings/org.eclipse.wst.common.project.facet.core.xml"
        // removing the facet of jst.web version 2.4 and adding version 3.1.
        // One day this will not be needed anymore, but until then...
        facet {
        	facet name: 'jst.web', version: '3.1'
        	def oldJstWebFacet = facets.findAll {
            	it.name == 'jst.web' && it.version == '2.4'
            }
            facets.removeAll(oldJstWebFacet)
        }
    }
	// https://blog.gradle.org/buildship-sync-task-exec
    autoBuildTasks sassCompile // Only when using SASS !!!
}

// This is to run outside Eclipse
compileJava.dependsOn sassCompile // Only when using SASS !!!

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF8'
}

repositories {
    mavenCentral()
    // mavenLocal()
}

dependencies {

    // Add here any library that you might need (then run "Refresh Gradle Project")
    
	implementation	 project(':YadaWeb')
	implementation	 project(':YadaWebSecurity')	// Remove if not used !!!
	implementation	 project(':YadaWebCMS')			// Remove if not used !!!
	implementation	 project(':YadaWebCommerce')	// Remove if not used !!!

	// Your libs here:
	// implementation 'org.springframework:spring-webmvc:5.3.8',

    // Needed in Tomcat 8 server at runtime
    // runtimeOnly 'commons-beanutils:commons-beanutils:1.9.4'
    // runtimeOnly 'commons-jxpath:commons-jxpath:1.3'

    // Needed in Tomcat 8 embedded at runtime
    runtimeOnly 'org.apache.tomcat:tomcat-el-api:8.5.+'
    runtimeOnly 'org.apache.tomcat:tomcat-jasper-el:8.5.+'
    runtimeOnly 'org.apache.tomcat:tomcat-jasper:8.5.+'

    testImplementation 'junit:junit:4.13.+'
}

yadaInit {
    projectName = rootProject.name
    acronym = project.acronym
    basePackage = 'com.example'	// CHANGE THIS !!!
    dbPasswords = ['dev': 'mydevpwd', 'tst': 'mytstpwd', 'prod': 'myprodpwd']	// CHANGE THIS !!!
    envs=['dev', 'tst', 'prod']	// CHANGE THIS !!!
        // See YadaTools/src/main/groovy/net/yadaframework/tools/YadaProject.groovy
        // for more configuration options
}

configurations {
    hibtools {
        extendsFrom configurations.implementation
    }
}
dependencies {
    hibtools files("$buildDir/classes/java/main") // Needed for yadaPersistenceUnit
    hibtools 'org.hibernate:hibernate-tools:5.+'
}
task dbSchema(dependsOn: [classes], type: net.yadaframework.tools.YadaCreateDbSchemaTask) {
    inputs.files (configurations.hibtools, "$rootDir/src/main/resources/META-INF/persistence.xml") 
    outputs.files "$rootDir/schema/${acronym}.sql"
    outputfilename = "${acronym}.sql"
}

sass {
	properties = "$projectDir/sass.properties"
    download {
		version = "1.58.2"
		output = "$projectDir/.sass"
    }
}

run {
    args = ["$acroenv", "$webAppDir", "/srv/${acroenv}/tmp", "dev"]
    mainClass = 'net.yadaframework.core.YadaTomcatServer' 
//   debugOptions {
//        enabled = true
//        port = 5566
//        server = true
//        suspend = false
//    }    
}

